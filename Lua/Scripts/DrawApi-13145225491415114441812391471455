local DrawingApi = {}

local DrawingApiGUi = Instance.new("ScreenGui")
DrawingApiGUi.Parent = game.CoreGui
DrawingApiGUi.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

function DrawingApi:Create(type)
    local obj = {}
    if type == "Line" then
        local frame = Instance.new("Frame")
        frame.Parent = DrawingApiGUi
        frame.BackgroundColor3 = Color3.fromRGB(255,255,255)
        frame.BorderColor3 = Color3.fromRGB(0,0,0)
        frame.BorderSizePixel = 1
        frame.Size = UDim2.new(0,1,0,1)
        frame.Position = UDim2.new(0,0,0,0)
        frame.AnchorPoint = Vector2.new(0,0)
        frame.ZIndex = 5

        function obj:From(x,y)
            self._fromX = x
            self._fromY = y
            if self._toX and self._toY then
                local dx = self._toX - x
                local dy = self._toY - y
                frame.Size = UDim2.new(0, math.sqrt(dx*dx + dy*dy), 0, 1)
                frame.Position = UDim2.new(0,x,0,y)
                frame.Rotation = math.deg(math.atan2(dy,dx))
            end
            return self
        end

        function obj:To(x,y)
            self._toX = x
            self._toY = y
            if self._fromX and self._fromY then
                local dx = x - self._fromX
                local dy = y - self._fromY
                frame.Size = UDim2.new(0, math.sqrt(dx*dx + dy*dy), 0, 1)
                frame.Position = UDim2.new(0,self._fromX,0,self._fromY)
                frame.Rotation = math.deg(math.atan2(dy,dx))
            end
            return self
        end

        function obj:Color(color)
            frame.BackgroundColor3 = color
            return self
        end

        function obj:ZIndex(z)
            frame.ZIndex = z
            return self
        end

        function obj:SetVisibility(bool)
            frame.Visible = bool
            return self
        end

        obj.Instance = frame
    end
    return obj
end

return DrawingApi
